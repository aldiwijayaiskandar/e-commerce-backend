{"version":3,"sources":["component/Spinner/index.js","views/Transaction/index.js"],"names":["Spinner","props","useState","isLoading","setIsLoading","useEffect","style","position","borderRadius","left","top","marginLeft","marginTop","zIndex","background","opacity","padding","width","height","type","visible","color","prototype","PropTypes","bool","Transaction","setTransaction","a","Axios","method","url","headers","Authorization","Cookies","get","res","data","console","log","getData","className","xs","lg","length","responsive","map","item","index","key","verticalAlign","transaction_id","amount","format","Date","arrived_time","onClick","history","push","viewBox","fill","xmlns","d","fillRule","clipRule","margin","alignSelf"],"mappings":"mMAKMA,EAAU,SAAAC,GAAU,IAAD,EACWC,oBAAS,GADpB,mBAChBC,EADgB,KACLC,EADK,KAOvB,OAJAC,qBAAU,WACRD,EAAaH,EAAME,aAClB,CAACF,EAAME,YAEHA,EACL,yBACEG,MAAO,CACLC,SAAU,WAGVC,aAAc,GACdC,KAAM,MACNC,IAAK,MACLC,WAAY,QACZC,UAAW,QACXC,OAAQ,GACRC,WAAY,QACZC,QAAS,KAGX,yBAAKT,MAAO,CAAEU,QAAS,KACrB,kBAAC,IAAD,CACEC,MAAO,IACPC,OAAQ,IACRC,KAAK,OACLC,SAAS,EACTC,MAAM,cAIV,MAGNrB,EAAQsB,UAAY,CAClBnB,UAAWoB,IAAUC,O,0QC1BVC,EAAc,WAAO,IAAD,EACGvB,oBAAS,GADZ,mBACxBC,EADwB,KACbC,EADa,OAEOF,mBAAS,IAFhB,mBAExBuB,EAFwB,KAEXC,EAFW,iDAI/B,4BAAAC,EAAA,6DACEvB,GAAa,GADf,SAEoBwB,IAAM,CACtBC,OAAQ,MACRC,IAAI,gDACJC,QAAS,CAAEC,cAAeC,IAAQC,IAAI,kBAL1C,OAEQC,EAFR,OAOET,EAAeS,EAAIC,MACnBC,QAAQC,IAAIH,EAAIC,MAChBhC,GAAa,GATf,4CAJ+B,sBAoB/B,OAJAC,qBAAU,YAhBqB,mCAiB7BkC,KACC,IAGD,yBAAKC,UAAU,mBACb,kBAAC,IAAD,CAASrC,UAAWA,IACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsC,GAAG,KAAKC,GAAG,KACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGF,UAAU,wBADf,gBAGCf,EAAYkB,OAAS,EACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,YAAU,GACf,+BACE,4BACE,8CACA,sCACA,4CACA,wCAGJ,+BACGnB,EAAYoB,KAAI,SAACC,EAAMC,GACtB,OACE,wBAAIC,IAAKD,GACP,wBAAIzC,MAAO,CAAE2C,cAAe,WACzBH,EAAKI,gBAER,wBAAI5C,MAAO,CAAE2C,cAAe,WACzBH,EAAKK,QAER,wBAAI7C,MAAO,CAAE2C,cAAe,WACzBG,YAAO,IAAIC,KAAKP,EAAKQ,cAAe,gBAEvC,wBAAIhD,MAAO,CAAE2C,cAAe,WAC1B,kBAAC,IAAD,CACEM,QAAS,WACPC,IAAQC,KAAR,mCAC8BX,EAAKI,mBAIrC,yBACEV,UAAU,iBACVvB,MAAM,MACNC,OAAO,MACPwC,QAAQ,YACRC,KAAK,eACLC,MAAM,8BAEN,0BAAMC,EAAE,8CACR,0BACEC,SAAS,UACTD,EAAE,0FACFE,SAAS,sBAY7B,uBAAGzD,MAAO,CAAE0D,OAAQ,GAAIC,UAAW,WAAnC,2BAWCxC","file":"static/js/23.1900dbd5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nimport PropTypes from \"prop-types\";\n\nconst Spinner = props => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(props.isLoading);\n  }, [props.isLoading]);\n\n  return isLoading ? (\n    <div\n      style={{\n        position: \"absolute\",\n        // width: 150,\n        // height: 150,\n        borderRadius: 20,\n        left: \"50%\",\n        top: \"50%\",\n        marginLeft: \"-50px\",\n        marginTop: \"-50px\",\n        zIndex: 10,\n        background: \"black\",\n        opacity: 0.4\n      }}\n    >\n      <div style={{ padding: 35 }}>\n        <Loader\n          width={100}\n          height={100}\n          type=\"Bars\"\n          visible={true}\n          color=\"#00BFFF\"\n        />\n      </div>\n    </div>\n  ) : null;\n};\n\nSpinner.prototype = {\n  isLoading: PropTypes.bool\n};\n\nexport { Spinner };\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table,\n  Button\n} from \"reactstrap\";\nimport Axios from \"axios\";\nimport Cookies from \"js-cookie\";\nimport history from \"../../history\";\nimport { Spinner } from \"../../component\";\nimport { format } from \"date-fns\";\n\nexport const Transaction = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [Transaction, setTransaction] = useState([]);\n\n  async function getData() {\n    setIsLoading(true);\n    const res = await Axios({\n      method: \"GET\",\n      url: `https://antarblanja.com/api/admin/transaction`,\n      headers: { Authorization: Cookies.get(\"admin_token\") }\n    });\n    setTransaction(res.data);\n    console.log(res.data);\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <div className=\"animated fadeIn\">\n      <Spinner isLoading={isLoading} />\n      <Row>\n        <Col xs=\"12\" lg=\"6\">\n          <Card>\n            <CardHeader>\n              <i className=\"fa fa-align-justify\"></i> Transaction\n            </CardHeader>\n            {Transaction.length > 0 ? (\n              <CardBody>\n                <Table responsive>\n                  <thead>\n                    <tr>\n                      <th>Transaction id</th>\n                      <th>Amount</th>\n                      <th>Arrived time</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {Transaction.map((item, index) => {\n                      return (\n                        <tr key={index}>\n                          <td style={{ verticalAlign: \"middle\" }}>\n                            {item.transaction_id}\n                          </td>\n                          <td style={{ verticalAlign: \"middle\" }}>\n                            {item.amount}\n                          </td>\n                          <td style={{ verticalAlign: \"middle\" }}>\n                            {format(new Date(item.arrived_time), \"dd MMM yyyy\")}\n                          </td>\n                          <td style={{ verticalAlign: \"middle\" }}>\n                            <Button\n                              onClick={() => {\n                                history.push(\n                                  `/admin/TransactionDetail/${item.transaction_id}`\n                                );\n                              }}\n                            >\n                              <svg\n                                className=\"bi bi-eye-fill\"\n                                width=\"1em\"\n                                height=\"1em\"\n                                viewBox=\"0 0 16 16\"\n                                fill=\"currentColor\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                              >\n                                <path d=\"M10.5 8a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\n                                <path\n                                  fillRule=\"evenodd\"\n                                  d=\"M0 8s3-5.5 8-5.5S16 8 16 8s-3 5.5-8 5.5S0 8 0 8zm8 3.5a3.5 3.5 0 100-7 3.5 3.5 0 000 7z\"\n                                  clipRule=\"evenodd\"\n                                />\n                              </svg>\n                            </Button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </CardBody>\n            ) : (\n              <p style={{ margin: 20, alignSelf: \"center\" }}>\n                No Transaction Yet\n              </p>\n            )}\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default Transaction;\n"],"sourceRoot":""}