{"version":3,"sources":["component/Spinner/index.js","../node_modules/moment/src/lib/locale sync","views/Dashboard/Dashboard.js"],"names":["Spinner","props","useState","isLoading","setIsLoading","useEffect","style","position","borderRadius","left","top","marginLeft","marginTop","zIndex","background","opacity","padding","width","height","type","visible","color","prototype","PropTypes","bool","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","brandPrimary","getStyle","brandWarning","brandDanger","mainChartOpts","tooltips","enabled","custom","CustomTooltips","intersect","mode","callbacks","labelColor","tooltipItem","chart","backgroundColor","data","datasets","datasetIndex","borderColor","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","elements","point","radius","hitRadius","hoverRadius","hoverBorderWidth","Dashboard","total_transaction","revenue","user","merchant","setData","data1","setData1","data2","setData2","data3","setData3","data4","setData4","dropdownOpen","radioSelected","state","setState","onRadioBtnClick","a","Axios","method","url","headers","Authorization","Cookies","get","revenueCount","console","log","transactionCount","userCount","transactionGraph","revenue_month","userGraph","arr","arr2","arr3","arr4","Object","entries","value","push","fetchData","mainChart","labels","toUpperCase","label","pointHoverBackgroundColor","borderWidth","numberWithCommas","x","toString","replace","className","fallback","xs","sm","lg","aria-label","onClick","active","options","md","total","i","length","parseInt"],"mappings":"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","file":"static/js/21.f96d92cb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nimport PropTypes from \"prop-types\";\n\nconst Spinner = props => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(props.isLoading);\n  }, [props.isLoading]);\n\n  return isLoading ? (\n    <div\n      style={{\n        position: \"absolute\",\n        // width: 150,\n        // height: 150,\n        borderRadius: 20,\n        left: \"50%\",\n        top: \"50%\",\n        marginLeft: \"-50px\",\n        marginTop: \"-50px\",\n        zIndex: 10,\n        background: \"black\",\n        opacity: 0.4\n      }}\n    >\n      <div style={{ padding: 35 }}>\n        <Loader\n          width={100}\n          height={100}\n          type=\"Bars\"\n          visible={true}\n          color=\"#00BFFF\"\n        />\n      </div>\n    </div>\n  ) : null;\n};\n\nSpinner.prototype = {\n  isLoading: PropTypes.bool\n};\n\nexport { Spinner };\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 609;","import React, { Suspense, useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport {\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Col,\n  Progress,\n  Row\n} from \"reactstrap\";\nimport { CustomTooltips } from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\nimport { getStyle, hexToRgba } from \"@coreui/coreui/dist/js/coreui-utilities\";\nimport Cookies from \"js-cookie\";\nimport { Spinner } from \"../../component\";\nimport Axios from \"axios\";\n\nconst brandPrimary = getStyle(\"--primary\");\nconst brandSuccess = getStyle(\"--success\");\nconst brandInfo = getStyle(\"--info\");\nconst brandWarning = getStyle(\"--warning\");\nconst brandDanger = getStyle(\"--danger\");\n\nconst mainChartOpts = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips,\n    intersect: true,\n    mode: \"index\",\n    position: \"nearest\",\n    callbacks: {\n      labelColor: function(tooltipItem, chart) {\n        return {\n          backgroundColor:\n            chart.data.datasets[tooltipItem.datasetIndex].borderColor\n        };\n      }\n    }\n  },\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  scales: {\n    xAxes: [\n      {\n        gridLines: {\n          drawOnChartArea: false\n        }\n      }\n    ],\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n          maxTicksLimit: 5\n          // stepSize: Math.ceil(250 / 5),\n          // max: 250\n        }\n      }\n    ]\n  },\n  elements: {\n    point: {\n      radius: 0,\n      hitRadius: 10,\n      hoverRadius: 4,\n      hoverBorderWidth: 3\n    }\n  }\n};\n\nconst Dashboard = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState({\n    total_transaction: 0,\n    revenue: 0,\n    user: 0,\n    merchant: 0\n  });\n  const [data1, setData1] = useState([]);\n  const [data2, setData2] = useState([]);\n  const [data3, setData3] = useState([]);\n  const [data4, setData4] = useState([]);\n\n  const [state, setState] = useState({\n    dropdownOpen: false,\n    radioSelected: 2\n  });\n\n  function total(data) {\n    var total = 0;\n    for (let i = 0; i < data.length; i++) {\n      total += parseInt(data[i]);\n    }\n    return total.toString();\n  }\n\n  function onRadioBtnClick(radioSelected) {\n    state.radioSelected = radioSelected;\n    setState({\n      ...state\n    });\n  }\n\n  const loading = () => <Spinner isLoading={true} />;\n\n  async function fetchData() {\n    setIsLoading(true);\n\n    const revenueCount = await Axios({\n      method: \"GET\",\n      url: \"https://antarblanja.com/api/admin/transaction/revenue\",\n      headers: { Authorization: Cookies.get(\"admin_token\") }\n    });\n    data.revenue = revenueCount.data;\n    console.log(revenueCount.data);\n    const transactionCount = await Axios({\n      method: \"GET\",\n      url: \"https://antarblanja.com/api/admin/transaction/count\",\n      headers: { Authorization: Cookies.get(\"admin_token\") }\n    });\n    const userCount = await Axios({\n      method: \"GET\",\n      url: \"https://antarblanja.com/api/admin/customer/count\",\n      headers: { Authorization: Cookies.get(\"admin_token\") }\n    });\n    data.user = userCount.data;\n\n    // const merchantCount = await Axios({\n    //   method: \"GET\",\n    //   url: \"https://antarblanja.com/api/admin/merchant/count\",\n    //   headers: { Authorization: Cookies.get(\"admin_token\") }\n    // });\n    // data.merchant = merchantCount.data;\n    data.total_transaction = transactionCount.data;\n    const transactionGraph = await Axios({\n      method: \"GET\",\n      url: \"https://antarblanja.com/api/admin/transaction/graph\",\n      headers: { Authorization: Cookies.get(\"admin_token\") }\n    });\n    const revenue_month = await Axios({\n      method: \"GET\",\n      url: \"https://antarblanja.com/api/admin/transaction/revenue_month\",\n      headers: { Authorization: Cookies.get(\"admin_token\") }\n    });\n    const userGraph = await Axios({\n      method: \"GET\",\n      url: \"https://antarblanja.com/api/admin/customer/graph\",\n      headers: { Authorization: Cookies.get(\"admin_token\") }\n    });\n\n    // const merchantGraph = await Axios({\n    //   method: \"GET\",\n    //   url: \"https://antarblanja.com/api/admin/merchant/graph\",\n    //   headers: { Authorization: Cookies.get(\"admin_token\") }\n    // });\n    var arr = [];\n    var arr2 = [];\n    var arr3 = [];\n    var arr4 = [];\n\n    for (const [key, value] of Object.entries(transactionGraph.data)) {\n      arr.push(value);\n    }\n\n    for (const [key, value] of Object.entries(revenue_month.data)) {\n      arr2.push(value);\n    }\n\n    for (const [key, value] of Object.entries(userGraph.data)) {\n      arr3.push(value);\n    }\n    // for (const [key, value] of Object.entries(merchantGraph.data)) {\n    //   arr4.push(value);\n    // }\n\n    setData({ ...data });\n    setData1(arr);\n    setData2(arr2);\n    setData3(arr3);\n    setData4(arr4);\n    setIsLoading(false);\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const mainChart = {\n    labels: [\n      \"jan\".toUpperCase(),\n      \"feb\".toUpperCase(),\n      \"mar\".toUpperCase(),\n      \"apr\".toUpperCase(),\n      \"mei\".toUpperCase(),\n      \"jun\".toUpperCase(),\n      \"jul\".toUpperCase(),\n      \"aug\".toUpperCase(),\n      \"sep\".toUpperCase(),\n      \"oct\".toUpperCase(),\n      \"nov\".toUpperCase(),\n      \"des\".toUpperCase()\n    ],\n    datasets: [\n      {\n        label: \"Transaction\",\n        backgroundColor: \"transparent\",\n        borderColor: brandPrimary,\n        pointHoverBackgroundColor: \"#fff\",\n        borderWidth: 1,\n        data: data1\n      },\n      {\n        label: \"Revenue\",\n        backgroundColor: \"transparent\",\n        borderColor: brandWarning,\n        pointHoverBackgroundColor: \"#fff\",\n        borderWidth: 1,\n        data: data2\n      },\n      {\n        label: \"User\",\n        backgroundColor: \"transparent\",\n        borderColor: brandWarning,\n        pointHoverBackgroundColor: \"#fff\",\n        borderWidth: 1,\n        data: data3\n      },\n      {\n        label: \"Merchant\",\n        backgroundColor: \"transparent\",\n        borderColor: brandDanger,\n        pointHoverBackgroundColor: \"#fff\",\n        borderWidth: 1,\n        data: data4\n      }\n    ]\n  };\n\n  function numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n\n  return (\n    <div className=\"animated fadeIn\">\n      <Spinner isLoading={isLoading} />\n      <Suspense fallback={loading()}>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                {/* <ButtonGroup className=\"float-right\">\n                <ButtonDropdown\n                  id=\"card1\"\n                  isOpen={card.card1}\n                  toggle={() => {\n                    card.card1 = !card.card1;\n                    setCard({ ...card });\n                  }}\n                >\n                  <DropdownToggle caret className=\"p-0\" color=\"transparent\">\n                    <i className=\"icon-settings\"></i>\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem>Action</DropdownItem>\n                    <DropdownItem>Another action</DropdownItem>\n                    <DropdownItem disabled>Disabled action</DropdownItem>\n                    <DropdownItem>Something else here</DropdownItem>\n                  </DropdownMenu>\n                </ButtonDropdown>\n              </ButtonGroup> */}\n                <div className=\"text-value\">{data.total_transaction}</div>\n                <div>Total Transaction</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: \"70px\" }}>\n                {/* <Line\n                data={cardChartData2}\n                options={cardChartOpts2}\n                height={70}\n              /> */}\n              </div>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\n            <Card className=\"text-white bg-primary\">\n              <CardBody className=\"pb-0\">\n                {/* <ButtonGroup className=\"float-right\">\n                  <Dropdown\n                    id=\"card2\"\n                    isOpen={state.card2}\n                    toggle={() => {\n                      this.setState({ card2: !state.card2 });\n                    }}\n                  >\n                    <DropdownToggle className=\"p-0\" color=\"transparent\">\n                      <i className=\"icon-location-pin\"></i>\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem>Action</DropdownItem>\n                      <DropdownItem>Another action</DropdownItem>\n                      <DropdownItem>Something else here</DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown>\n                </ButtonGroup> */}\n                <div className=\"text-value\">\n                  Rp.{numberWithCommas(data.revenue)}\n                </div>\n                <div>Revenue</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: \"70px\" }}>\n                {/* <Line\n                data={cardChartData1}\n                options={cardChartOpts1}\n                height={70}\n              /> */}\n              </div>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\n            <Card className=\"text-white bg-warning\">\n              <CardBody className=\"pb-0\">\n                {/* <ButtonGroup className=\"float-right\">\n                  <Dropdown\n                    id=\"card3\"\n                    isOpen={state.card3}\n                    toggle={() => {\n                      this.setState({ card3: !state.card3 });\n                    }}\n                  >\n                    <DropdownToggle caret className=\"p-0\" color=\"transparent\">\n                      <i className=\"icon-settings\"></i>\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem>Action</DropdownItem>\n                      <DropdownItem>Another action</DropdownItem>\n                      <DropdownItem>Something else here</DropdownItem>\n                    </DropdownMenu>\n                  </Dropdown>\n                </ButtonGroup> */}\n                <div className=\"text-value\">{data.user}</div>\n                <div>User</div>\n              </CardBody>\n              <div className=\"chart-wrapper\" style={{ height: \"70px\" }}>\n                {/* <Line\n                data={cardChartData3}\n                options={cardChartOpts3}\n                height={70}\n              /> */}\n              </div>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"3\">\n            <Card className=\"text-white bg-danger\">\n              <CardBody className=\"pb-0\">\n                <ButtonGroup className=\"float-right\">\n                  {/* <ButtonDropdown id='card4' isOpen={this.state.card4} toggle={() => { this.setState({ card4: !this.state.card4 }); }}>\n                    <DropdownToggle caret className=\"p-0\" color=\"transparent\">\n                      <i className=\"icon-settings\"></i>\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem>Action</DropdownItem>\n                      <DropdownItem>Another action</DropdownItem>\n                      <DropdownItem>Something else here</DropdownItem>\n                    </DropdownMenu>\n                  </ButtonDropdown> */}\n                </ButtonGroup>\n                <div className=\"text-value\">{data.merchant}</div>\n                <div>Item</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: \"70px\" }}>\n                {/* <Bar\n                  data={cardChartData4}\n                  options={cardChartOpts4}\n                  height={70}\n                /> */}\n              </div>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Col sm=\"5\">\n                    <CardTitle className=\"mb-0\">Graph</CardTitle>\n                    <div className=\"small text-muted\">November 2015</div>\n                  </Col>\n                  <Col sm=\"7\" className=\"d-none d-sm-inline-block\">\n                    <Button color=\"primary\" className=\"float-right\">\n                      <i className=\"icon-cloud-download\"></i>\n                    </Button>\n                    <ButtonToolbar\n                      className=\"float-right\"\n                      aria-label=\"Toolbar with button groups\"\n                    >\n                      <ButtonGroup className=\"mr-3\" aria-label=\"First group\">\n                        <Button\n                          color=\"outline-secondary\"\n                          onClick={() => onRadioBtnClick(1)}\n                          active={state.radioSelected === 1}\n                        >\n                          Day\n                        </Button>\n                        <Button\n                          color=\"outline-secondary\"\n                          onClick={() => onRadioBtnClick(2)}\n                          active={state.radioSelected === 2}\n                        >\n                          Month\n                        </Button>\n                        <Button\n                          color=\"outline-secondary\"\n                          onClick={() => onRadioBtnClick(3)}\n                          active={state.radioSelected === 3}\n                        >\n                          Year\n                        </Button>\n                      </ButtonGroup>\n                    </ButtonToolbar>\n                  </Col>\n                </Row>\n                <div\n                  className=\"chart-wrapper\"\n                  style={{ height: 300 + \"px\", marginTop: 40 + \"px\" }}\n                >\n                  <Line data={mainChart} options={mainChartOpts} height={300} />\n                </div>\n              </CardBody>\n              <CardFooter>\n                <Row className=\"text-center\">\n                  <Col sm={12} md className=\"mb-sm-2 mb-0 mb-0\">\n                    <div className=\"text-muted\">Total Transaction /m</div>\n                    <strong>{data.total_transaction / 12} /m</strong>\n                    <Progress\n                      className=\"progress-xs mt-2\"\n                      color=\"info\"\n                      value=\"100\"\n                    />\n                  </Col>\n                  <Col sm={12} md className=\"mb-sm-2 mb-0\">\n                    <div className=\"text-muted\">Total Revenue /m</div>\n                    <strong>Rp.{numberWithCommas(total(data1) / 12)}/m</strong>\n                    <Progress\n                      className=\"progress-xs mt-2\"\n                      color=\"primary\"\n                      value=\"100\"\n                    />\n                  </Col>\n                  <Col sm={12} md className=\"mb-sm-2 mb-0\">\n                    <div className=\"text-muted\">Total User</div>\n                    <strong>{data.user}</strong>\n                    <Progress\n                      className=\"progress-xs mt-2\"\n                      color=\"warning\"\n                      value=\"100\"\n                    />\n                  </Col>\n\n                  <Col sm={12} md className=\"mb-sm-2 mb-0\">\n                    <div className=\"text-muted\">Merchant</div>\n                    <strong>{data.merchant}</strong>\n                    <Progress\n                      className=\"progress-xs mt-2\"\n                      color=\"danger\"\n                      value=\"100\"\n                    />\n                  </Col>\n                </Row>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}